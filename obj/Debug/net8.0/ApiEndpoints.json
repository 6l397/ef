[
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.LocationsController",
    "Method": "GetLocations",
    "RelativePath": "api/Locations",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "City",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "StreetAddress",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[marketplace3.BusinessLogicLayer.DTO.Responses.LocationResponse, marketplace3, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.LocationsController",
    "Method": "CreateLocation",
    "RelativePath": "api/Locations",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "marketplace3.BusinessLogicLayer.DTO.Requests.LocationRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.LocationsController",
    "Method": "GetLocation",
    "RelativePath": "api/Locations/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "marketplace3.BusinessLogicLayer.DTO.Responses.LocationResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.LocationsController",
    "Method": "UpdateLocation",
    "RelativePath": "api/Locations/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "marketplace3.BusinessLogicLayer.DTO.Requests.LocationRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.LocationsController",
    "Method": "DeleteLocation",
    "RelativePath": "api/Locations/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.SellersController",
    "Method": "GetSellers",
    "RelativePath": "api/Sellers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "LocationId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "Name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "City",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[marketplace3.BusinessLogicLayer.DTO.Responses.SellerResponse, marketplace3, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.SellersController",
    "Method": "CreateSeller",
    "RelativePath": "api/Sellers",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sellerRequest",
        "Type": "marketplace3.BusinessLogicLayer.DTO.Requests.SellerRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.SellersController",
    "Method": "GetSellerById",
    "RelativePath": "api/Sellers/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "marketplace3.BusinessLogicLayer.DTO.Responses.SellerResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.SellersController",
    "Method": "UpdateSeller",
    "RelativePath": "api/Sellers/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "sellerRequest",
        "Type": "marketplace3.BusinessLogicLayer.DTO.Requests.SellerRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.SellersController",
    "Method": "DeleteSeller",
    "RelativePath": "api/Sellers/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.SellersController",
    "Method": "GetSellerPricings",
    "RelativePath": "api/Sellers/{id}/pricings",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[marketplace3.BusinessLogicLayer.DTO.Responses.ServicePricingResponse, marketplace3, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.SellersController",
    "Method": "GetSellerServiceCategories",
    "RelativePath": "api/Sellers/{id}/servicecategories",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[marketplace3.BusinessLogicLayer.DTO.Responses.SellerServiceCategoryResponse, marketplace3, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.SellerServiceCategoriesController",
    "Method": "GetAllAsync",
    "RelativePath": "api/SellerServiceCategories",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[marketplace3.BusinessLogicLayer.DTO.Responses.SellerServiceCategoryResponse, marketplace3, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.SellerServiceCategoriesController",
    "Method": "AddAsync",
    "RelativePath": "api/SellerServiceCategories",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "marketplace3.BusinessLogicLayer.DTO.Requests.SellerServiceCategoryRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.SellerServiceCategoriesController",
    "Method": "GetByIdAsync",
    "RelativePath": "api/SellerServiceCategories/{sellerId}/{serviceCategoryId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sellerId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "serviceCategoryId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "marketplace3.BusinessLogicLayer.DTO.Responses.SellerServiceCategoryResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.SellerServiceCategoriesController",
    "Method": "UpdateAsync",
    "RelativePath": "api/SellerServiceCategories/{sellerId}/{serviceCategoryId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sellerId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "serviceCategoryId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "marketplace3.BusinessLogicLayer.DTO.Requests.SellerServiceCategoryRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.SellerServiceCategoriesController",
    "Method": "DeleteAsync",
    "RelativePath": "api/SellerServiceCategories/{sellerId}/{serviceCategoryId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sellerId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "serviceCategoryId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.SellerServiceCategoriesController",
    "Method": "GetPagedAsync",
    "RelativePath": "api/SellerServiceCategories/paged",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "SellerId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "ServiceCategoryId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.ServiceCategoriesController",
    "Method": "GetAll",
    "RelativePath": "api/ServiceCategories",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[marketplace3.BusinessLogicLayer.DTO.Responses.ServiceCategoryResponse, marketplace3, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.ServiceCategoriesController",
    "Method": "Create",
    "RelativePath": "api/ServiceCategories",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "marketplace3.BusinessLogicLayer.DTO.Requests.ServiceCategoryRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.ServiceCategoriesController",
    "Method": "GetById",
    "RelativePath": "api/ServiceCategories/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "marketplace3.BusinessLogicLayer.DTO.Responses.ServiceCategoryResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.ServiceCategoriesController",
    "Method": "Update",
    "RelativePath": "api/ServiceCategories/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "marketplace3.BusinessLogicLayer.DTO.Requests.ServiceCategoryRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.ServiceCategoriesController",
    "Method": "Delete",
    "RelativePath": "api/ServiceCategories/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.ServiceCategoriesController",
    "Method": "GetByCategoryName",
    "RelativePath": "api/ServiceCategories/name",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "categoryName",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[marketplace3.BusinessLogicLayer.DTO.Responses.ServiceCategoryResponse, marketplace3, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.ServiceCategoriesController",
    "Method": "GetPaged",
    "RelativePath": "api/ServiceCategories/paged",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "CategoryName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[marketplace3.BusinessLogicLayer.DTO.Responses.ServiceCategoryResponse, marketplace3, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.ServicePricingsController",
    "Method": "GetServicePricings",
    "RelativePath": "api/ServicePricings",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "SellerId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "ServiceName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[marketplace3.BusinessLogicLayer.DTO.Responses.ServicePricingResponse, marketplace3, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.ServicePricingsController",
    "Method": "CreateServicePricing",
    "RelativePath": "api/ServicePricings",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "marketplace3.BusinessLogicLayer.DTO.Requests.ServicePricingRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "marketplace3.BusinessLogicLayer.DTO.Responses.ServicePricingResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.ServicePricingsController",
    "Method": "GetServicePricingById",
    "RelativePath": "api/ServicePricings/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "marketplace3.BusinessLogicLayer.DTO.Responses.ServicePricingResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.ServicePricingsController",
    "Method": "UpdateServicePricing",
    "RelativePath": "api/ServicePricings/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "marketplace3.BusinessLogicLayer.DTO.Requests.ServicePricingRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.ServicePricingsController",
    "Method": "DeleteServicePricing",
    "RelativePath": "api/ServicePricings/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.ServicePricingsController",
    "Method": "GetServicePricingsBySellerId",
    "RelativePath": "api/ServicePricings/Seller/{sellerId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sellerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[marketplace3.BusinessLogicLayer.DTO.Responses.ServicePricingResponse, marketplace3, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "marketplace3.WebAPI.Controllers.ServicePricingsController",
    "Method": "GetServicePricingsByServiceName",
    "RelativePath": "api/ServicePricings/ServiceName/{serviceName}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "serviceName",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[marketplace3.BusinessLogicLayer.DTO.Responses.ServicePricingResponse, marketplace3, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]